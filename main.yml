---
- name: Enable COPR repositories
  become: yes
  hosts: localhost
  tasks:
    - name: Enable COPR repositories
      ansible.builtin.shell: dnf copr enable -y dejan/lazygit
- name: Install dependencies
  become: true
  hosts: localhost
  tasks:
    - name: Install basic packages
      ansible.builtin.dnf:
        name: "{{ basic_packages }}"
        state: present
        allowerasing: true
    - name: Install system tools
      ansible.builtin.dnf:
        name: "{{ sys_tools }}"
        state: present
        allowerasing: true

- name: Install Neovim
  become: true
  hosts: localhost
  tasks:
    - name: Install Neovim package
      ansible.builtin.dnf:
        name: neovim
        state: latest

    - name: Install Vim Plug for Neovim
      ansible.builtin.shell: |
        curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      args:
        executable: /bin/bash
      become: false

- name: Install Wezterm
  become: true
  hosts: localhost
  tasks:
    - name: Download RPM package
      ansible.builtin.get_url:
        url: https://github.com/wezterm/wezterm/releases/download/nightly/wezterm-nightly-fedora40.rpm
        dest: .
    - name: Install RPM package
      ansible.builtin.command:
        cmd: rpm -ivh ./wezterm-nightly-fedora40.rpm
    - name: Remove RPM package
      ansible.builtin.file:
        path: ./wezterm-nightly-fedora40.rpm
        state: absent

- name: Install zsh shell
  become: true
  hosts: localhost
  vars:
    omz_dir: "/home/{{ user }}/.oh-my-zsh"
  tasks:
    - name: Install zsh
      ansible.builtin.dnf:
        name: zsh
        state: latest
    - name: Set user shell to zsh
      ansible.builtin.user:
        name: "{{ user }}"
        shell: /bin/zsh
      become: true
    - name: Install Oh My Zsh # noqa: latest
      become_user: "{{ user }}"
      ansible.builtin.git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: "{{ omz_dir }}"
        depth: 1
    - name: Install zsh-autosuggestions plugin # noqa: latest
      become_user: "{{ user }}"
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-autosuggestions
        dest: "{{ omz_dir }}/custom/plugins/zsh-autosuggestions"
        depth: 1
    - name: Install zsh-completions plugin # noqa: latest
      become_user: "{{ user }}"
      ansible.builtin.git:
        repo: https://github.com/zsh-users/zsh-completions
        dest: "{{ omz_dir }}/custom/plugins/zsh-completions"
        depth: 1
    - name: Copy Dracula theme
      ansible.builtin.copy:
        src: "./config-files/dracula-theme/zsh/dracula.zsh-theme"
        dest: "{{ omz_dir }}/themes"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '744'
    - name: Copy Dracula theme lib
      ansible.builtin.copy:
        src: "./config-files/dracula-theme/zsh/lib"
        dest: "{{ omz_dir }}/themes"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '744'

- name: Install NerdFonts
  become: false
  hosts: localhost
  tasks:
    - name: Download package
      ansible.builtin.get_url:
        url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/CommitMono.zip
        dest: .
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: ~/.local/share/fonts
        state: directory
        mode: '0755'
    - name: Unarchive package
      ansible.builtin.unarchive:
        src: ./CommitMono.zip
        dest: ~/.local/share/fonts
    - name: Remove package
      ansible.builtin.file:
        path: ./CommitMono.zip
        state: absent

- name: Install NVM
  become: false
  hosts: localhost
  tasks:
    - name: Installing
      ansible.builtin.shell:
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash

- name: Install Golang 
  hosts: localhost
  become: yes
  vars:

    go_version: "1.24.3"
    go_tarball: "go{{ go_version }}.linux-amd64.tar.gz"
    go_download_url: "https://go.dev/dl/{{ go_tarball }}"
    go_install_dir: "/usr/local"
  tasks:
    - name: Download Golang tarball
      get_url:
        url: "{{ go_download_url }}"
        dest: "/tmp/{{ go_tarball }}"
    - name: Extract Golang tarball
      unarchive:
        src: "/tmp/{{ go_tarball }}"
        dest: "{{ go_install_dir }}"
    - name: Remove tarball
      ansible.builtin.file:
        path: "/tmp/{{ go_tarball }}"
        state: absent
    - name: Install Golang lint
      ansible.builtin.shell: >
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.4.0

- name: Install Docker 
  hosts: localhost
  become: yes
  vars:
    ansible_user: saldyy
  tasks:
    - name: Add Docker CE repo
      command: >
        dnf-3 config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
    - name: Installing
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
    - name: Enable Docker
      ansible.builtin.systemd_service:
        name: docker
        enabled: true
        state: started

- name: Install kubectl
  hosts: localhost
  become: yes
  tasks:
    - name: Download package
      shell: >
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - name: Installing
      ansible.builtin.copy:
        src: kubectl
        dest: /usr/local/bin/kubectl
        owner: root
        group: root
        mode: '0755'
    - name: Remove package
      ansible.builtin.file:
        path: ./kubectl
        state: absent

- name: Install minikube
  hosts: localhost
  become: yes
  tasks:
    - name: Download package
      ansible.builtin.get_url:
        dest: .
        url: https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64
    - name: Installing
      ansible.builtin.copy:
        src: minikube-linux-amd64
        dest: /usr/local/bin/minikube
        owner: root
        group: root
        mode: '0755'
    - name: Remove package
      ansible.builtin.file:
        path: ./minikube-linux-amd64
        state: absent


